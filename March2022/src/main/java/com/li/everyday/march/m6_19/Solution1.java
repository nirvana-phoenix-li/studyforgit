package com.li.everyday.march.m6_19;

import java.util.HashMap;

public class Solution1 {
    public static void main(String[] args) {
        String lEeTcOd
        String eee = "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA";
        Solution1 main = new Solution1();
        String s = main.greatestLetter(eee);
        System.out.println(s);
    }

    public String greatestLetter(String s) {
        if (s.length() == 1) return "";
        HashMap<Character, Boolean> hashMap = new HashMap<>();
        for (int i = 0; i < s.length(); i++) {
            if ((s.charAt(i) <= 90 && s.charAt(i) >= 65)) {
                if (!hashMap.containsKey(s.charAt(i))) {
                    hashMap.put(s.charAt(i), true);
                } else {
                    hashMap.put(s.charAt(i), true);
                }
            } else if (s.charAt(i) <= 122 && s.charAt(i) >= 97) {

                if (!hashMap.containsKey((s.charAt(i)))) {
                    hashMap.put(s.charAt(i), true);
                } else {
                    hashMap.put(s.charAt(i), true);
                }
            }
        }
        String res = "";
        for (Character character : hashMap.keySet()) {
            if (hashMap.get(character) != null && (hashMap.get((char) (character - 32)) != null||hashMap.get((char) (character + 32)) != null)) {
                char help= hashMap.containsKey((char) (character - 32))? (char) (character- 32) :character;
                if (res.equals("")) {
                    res = String.valueOf(help);
                } else {
                    if (help > res.charAt(0)) {
                        res = String.valueOf(help);
                    }
                }
            }
        }
        return res;
    }

}
